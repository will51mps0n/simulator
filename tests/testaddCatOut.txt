instruction memory:
	instrMem[ 0 ]	= 0x00810010	= 8454160	= lw 0 1 16
	instrMem[ 1 ]	= 0x00c10011	= 12648465	= sw 0 1 17
	instrMem[ 2 ]	= 0x00820011	= 8519697	= lw 0 2 17
	instrMem[ 3 ]	= 0x000a0003	= 655363	= add 1 2 3
	instrMem[ 4 ]	= 0x00c30013	= 12779539	= sw 0 3 19
	instrMem[ 5 ]	= 0x00840013	= 8650771	= lw 0 4 19
	instrMem[ 6 ]	= 0x00640004	= 6553604	= nor 4 4 4
	instrMem[ 7 ]	= 0x00640004	= 6553604	= nor 4 4 4
	instrMem[ 8 ]	= 0x00640004	= 6553604	= nor 4 4 4
	instrMem[ 9 ]	= 0x00860012	= 8781842	= lw 0 6 18
	instrMem[ 10 ]	= 0x00490001	= 4784129	= nor 1 1 1
	instrMem[ 11 ]	= 0x000e0001	= 917505	= add 1 6 1
	instrMem[ 12 ]	= 0x00210004	= 2162692	= add 4 1 4
	instrMem[ 13 ]	= 0x00c40013	= 12845075	= sw 0 4 19
	instrMem[ 14 ]	= 0x0120fff6	= 18939894	= beq 4 0 -10
	instrMem[ 15 ]	= 0x01800000	= 25165824	= halt
	instrMem[ 16 ]	= 0x0000000a	= 10	= add 0 0 10
	instrMem[ 17 ]	= 0x00000014	= 20	= add 0 0 20
	instrMem[ 18 ]	= 0x00000001	= 1	= add 0 0 1
	instrMem[ 19 ]	= 0x00000000	= 0	= add 0 0 0

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 20
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 20
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 20
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12648465 ( sw 0 1 17 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 16
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 0 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 20
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12648465 ( sw 0 1 17 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 2 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 16 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		branchTarget 17 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 16
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 20
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519697 ( lw 0 2 17 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 12648465 ( sw 0 1 17 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0
		offset = 17
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 18 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 16 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		writeData = 10
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 20
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 8519697 ( lw 0 2 17 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 17
	EX/MEM pipeline register:
		instruction = 12648465 ( sw 0 1 17 )
		branchTarget 19 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 17
		readRegB = 10
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
	WB/END pipeline register:
		instruction = 8454160 ( lw 0 1 16 )
		writeData = 10
end state

@@@
state before cycle 6 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 4 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 17 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8519697 ( lw 0 2 17 )
		branchTarget 20 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 17
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 12648465 ( sw 0 1 17 )
		writeData = 10 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
end state

@@@
state before cycle 7 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12779539 ( sw 0 3 19 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 655363 ( add 1 2 3 )
		pcPlus1 = 4
		readRegA = 10
		readRegB = 0
		offset = 3 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 21 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 17 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519697 ( lw 0 2 17 )
		writeData = 10
	WB/END pipeline register:
		instruction = 12648465 ( sw 0 1 17 )
		writeData = 10 (Don't Care)
end state

@@@
state before cycle 8 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8650771 ( lw 0 4 19 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 12779539 ( sw 0 3 19 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 0
		offset = 19
	EX/MEM pipeline register:
		instruction = 655363 ( add 1 2 3 )
		branchTarget 7 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 20
		readRegB = 10 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
	WB/END pipeline register:
		instruction = 8519697 ( lw 0 2 17 )
		writeData = 10
end state

@@@
state before cycle 9 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 0
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 8650771 ( lw 0 4 19 )
		pcPlus1 = 6
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 19
	EX/MEM pipeline register:
		instruction = 12779539 ( sw 0 3 19 )
		branchTarget 24 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19
		readRegB = 20
	MEM/WB pipeline register:
		instruction = 655363 ( add 1 2 3 )
		writeData = 20
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 10 (Don't Care)
end state

@@@
state before cycle 10 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 29360128 ( noop )
		pcPlus1 = 7 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 19 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8650771 ( lw 0 4 19 )
		branchTarget 25 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 12779539 ( sw 0 3 19 )
		writeData = 20 (Don't Care)
	WB/END pipeline register:
		instruction = 655363 ( add 1 2 3 )
		writeData = 20
end state

@@@
state before cycle 11 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		pcPlus1 = 7
		readRegA = 0
		readRegB = 0
		offset = 4 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop )
		branchTarget 26 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8650771 ( lw 0 4 19 )
		writeData = 20
	WB/END pipeline register:
		instruction = 12779539 ( sw 0 3 19 )
		writeData = 20 (Don't Care)
end state

@@@
state before cycle 12 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = 20
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		pcPlus1 = 8
		readRegA = 0
		readRegB = 0
		offset = 4 (Don't Care)
	EX/MEM pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		branchTarget 11 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -21
		readRegB = 20 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop )
		writeData = 20 (Don't Care)
	WB/END pipeline register:
		instruction = 8650771 ( lw 0 4 19 )
		writeData = 20
end state

@@@
state before cycle 13 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = 20
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8781842 ( lw 0 6 18 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		pcPlus1 = 9
		readRegA = 20
		readRegB = 20
		offset = 4 (Don't Care)
	EX/MEM pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		branchTarget 12 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 20
		readRegB = -21 (Don't Care)
	MEM/WB pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		writeData = -21
	WB/END pipeline register:
		instruction = 29360128 ( noop )
		writeData = 20 (Don't Care)
end state

@@@
state before cycle 14 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -21
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4784129 ( nor 1 1 1 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 8781842 ( lw 0 6 18 )
		pcPlus1 = 10
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 18
	EX/MEM pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		branchTarget 13 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -21
		readRegB = 20 (Don't Care)
	MEM/WB pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		writeData = 20
	WB/END pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		writeData = -21
end state

@@@
state before cycle 15 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = 20
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 917505 ( add 1 6 1 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 4784129 ( nor 1 1 1 )
		pcPlus1 = 11
		readRegA = 10
		readRegB = 10
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8781842 ( lw 0 6 18 )
		branchTarget 28 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 18
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		writeData = -21
	WB/END pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		writeData = 20
end state

@@@
state before cycle 16 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -21
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 2162692 ( add 4 1 4 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 917505 ( add 1 6 1 )
		pcPlus1 = 12
		readRegA = 10
		readRegB = 0
		offset = 1 (Don't Care)
	EX/MEM pipeline register:
		instruction = 4784129 ( nor 1 1 1 )
		branchTarget 12 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -11
		readRegB = 10 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8781842 ( lw 0 6 18 )
		writeData = 1
	WB/END pipeline register:
		instruction = 6553604 ( nor 4 4 4 )
		writeData = -21
end state

@@@
state before cycle 17 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -21
		reg[ 5 ] = 0
		reg[ 6 ] = 1
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 12845075 ( sw 0 4 19 )
		pcPlus1 = 14
	ID/EX pipeline register:
		instruction = 2162692 ( add 4 1 4 )
		pcPlus1 = 13
		readRegA = -21
		readRegB = 10
		offset = 4 (Don't Care)
	EX/MEM pipeline register:
		instruction = 917505 ( add 1 6 1 )
		branchTarget 13 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -10
		readRegB = 1 (Don't Care)
	MEM/WB pipeline register:
		instruction = 4784129 ( nor 1 1 1 )
		writeData = -11
	WB/END pipeline register:
		instruction = 8781842 ( lw 0 6 18 )
		writeData = 1
end state

@@@
state before cycle 18 starts:
	pc = 15
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = -11
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -21
		reg[ 5 ] = 0
		reg[ 6 ] = 1
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 18939894 ( beq 4 0 -10 )
		pcPlus1 = 15
	ID/EX pipeline register:
		instruction = 12845075 ( sw 0 4 19 )
		pcPlus1 = 14
		readRegA = 0
		readRegB = -21
		offset = 19
	EX/MEM pipeline register:
		instruction = 2162692 ( add 4 1 4 )
		branchTarget 17 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -31
		readRegB = -10 (Don't Care)
	MEM/WB pipeline register:
		instruction = 917505 ( add 1 6 1 )
		writeData = -10
	WB/END pipeline register:
		instruction = 4784129 ( nor 1 1 1 )
		writeData = -11
end state

@@@
state before cycle 19 starts:
	pc = 16
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = 20
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = -10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -21
		reg[ 5 ] = 0
		reg[ 6 ] = 1
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 16
	ID/EX pipeline register:
		instruction = 18939894 ( beq 4 0 -10 )
		pcPlus1 = 15
		readRegA = -21
		readRegB = 0
		offset = -10
	EX/MEM pipeline register:
		instruction = 12845075 ( sw 0 4 19 )
		branchTarget 33 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19
		readRegB = -31
	MEM/WB pipeline register:
		instruction = 2162692 ( add 4 1 4 )
		writeData = -31
	WB/END pipeline register:
		instruction = 917505 ( add 1 6 1 )
		writeData = -10
end state

@@@
state before cycle 20 starts:
	pc = 17
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = -31
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = -10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -31
		reg[ 5 ] = 0
		reg[ 6 ] = 1
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 10 ( add 0 0 10 )
		pcPlus1 = 17
	ID/EX pipeline register:
		instruction = 25165824 ( halt )
		pcPlus1 = 16
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 18939894 ( beq 4 0 -10 )
		branchTarget 5
		eq ? False
		aluResult = -31 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 12845075 ( sw 0 4 19 )
		writeData = -31 (Don't Care)
	WB/END pipeline register:
		instruction = 2162692 ( add 4 1 4 )
		writeData = -31
end state

@@@
state before cycle 21 starts:
	pc = 18
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = -31
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = -10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -31
		reg[ 5 ] = 0
		reg[ 6 ] = 1
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 20 ( add 0 0 20 )
		pcPlus1 = 18
	ID/EX pipeline register:
		instruction = 10 ( add 0 0 10 )
		pcPlus1 = 17
		readRegA = 0
		readRegB = 0
		offset = 10 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt )
		branchTarget 16 (Don't Care)
		eq ? True (Don't Care)
		aluResult = -31 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 18939894 ( beq 4 0 -10 )
		writeData = -31 (Don't Care)
	WB/END pipeline register:
		instruction = 12845075 ( sw 0 4 19 )
		writeData = -31 (Don't Care)
end state
Machine halted
Total of 22 cycles executed
Final state of machine:

@@@
state before cycle 22 starts:
	pc = 19
	data memory:
		dataMem[ 0 ] = 8454160
		dataMem[ 1 ] = 12648465
		dataMem[ 2 ] = 8519697
		dataMem[ 3 ] = 655363
		dataMem[ 4 ] = 12779539
		dataMem[ 5 ] = 8650771
		dataMem[ 6 ] = 6553604
		dataMem[ 7 ] = 6553604
		dataMem[ 8 ] = 6553604
		dataMem[ 9 ] = 8781842
		dataMem[ 10 ] = 4784129
		dataMem[ 11 ] = 917505
		dataMem[ 12 ] = 2162692
		dataMem[ 13 ] = 12845075
		dataMem[ 14 ] = 18939894
		dataMem[ 15 ] = 25165824
		dataMem[ 16 ] = 10
		dataMem[ 17 ] = 10
		dataMem[ 18 ] = 1
		dataMem[ 19 ] = -31
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = -10
		reg[ 2 ] = 10
		reg[ 3 ] = 20
		reg[ 4 ] = -31
		reg[ 5 ] = 0
		reg[ 6 ] = 1
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 19
	ID/EX pipeline register:
		instruction = 20 ( add 0 0 20 )
		pcPlus1 = 18
		readRegA = 0
		readRegB = 0
		offset = 20 (Don't Care)
	EX/MEM pipeline register:
		instruction = 10 ( add 0 0 10 )
		branchTarget 27 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt )
		writeData = -31 (Don't Care)
	WB/END pipeline register:
		instruction = 18939894 ( beq 4 0 -10 )
		writeData = -31 (Don't Care)
end state
